value List a = {
  variant Empty = { };
  
  variant NonEmpty = {
    data = {
      head :: a;
      tail :: List a;
    }
  };
};

cons x xs = val NonEmpty { head = x, tail = xs };

empty = val Empty {};

sumList l = match l {
  NonEmpty { head: n, tail: ns } => n + sumList ns,
  Empty {} => 0
};

main = {
  l = cons 42 | cons 17 | cons (-3) | cons 20 empty;
  return sumList l;
};